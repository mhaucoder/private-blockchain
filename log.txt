#0 building with "default" instance using docker driver

#1 [internal] load .dockerignore
#1 transferring context: 124B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.20kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/node:16
#3 DONE 2.2s

#4 [builder 1/5] FROM docker.io/library/node:16@sha256:f77a1aef2da8d83e45ec990f45df50f1a286c5fe8bbfb8c6e4246c6389705c0b
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 198.53kB 0.0s done
#5 DONE 0.0s

#6 https://github.com/krallin/tini/releases/download/v0.19.0/tini-amd64
#6 DONE 1.4s

#7 [production  4/11] WORKDIR /usr/src/app
#7 CACHED

#8 [production  7/11] COPY --chown=node:node --from=builder /usr/src/app/package.json ./package.json
#8 CACHED

#9 [builder 5/5] RUN npm ci && npm run package
#9 CACHED

#10 [production  5/11] COPY --chown=node:node --from=builder /usr/src/app/dist ./dist
#10 CACHED

#11 [production  8/11] COPY --chown=node:node --from=builder /usr/src/app/npm-shrinkwrap.json ./npm-shrinkwrap.json
#11 CACHED

#12 [production 10/11] RUN npm ci --omit=dev && npm cache clean --force
#12 CACHED

#13 [production  2/11] ADD https://github.com/krallin/tini/releases/download/v0.19.0/tini-amd64 /tini
#13 CACHED

#14 [builder 4/5] RUN npm install
#14 CACHED

#15 [production  6/11] COPY --chown=node:node --from=builder /usr/src/app/data ./data
#15 CACHED

#16 [production  9/11] COPY --chown=node:node docker/docker-entrypoint.sh /usr/src/app/docker-entrypoint.sh
#16 CACHED

#17 [production  3/11] RUN chmod +x /tini
#17 CACHED

#18 [builder 2/5] WORKDIR /usr/src/app
#18 CACHED

#19 [builder 3/5] COPY --chown=node:node . /usr/src/app
#19 CACHED

#20 [production 11/11] RUN chmod +x /usr/src/app/docker-entrypoint.sh
#20 CACHED

#21 exporting to image
#21 exporting layers done
#21 writing image sha256:a428527e5beca3cc603705ccfc48f303d3ba330355356baab56216e69098a9f6 done
#21 naming to docker.io/library/chaincode_v1_ccaas_image:latest done
#21 DONE 0.0s
